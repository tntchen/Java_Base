package cn.homework3;
/*
 * 编写Java程序，要求：开启3个主线程之外的线程，3个线程同时卖票，票卖完后在控制
 * 台显示分别打印每个线程所卖的票号
 */
public class ThreadDemo {
	public static void main(String[] args) {
		Ticket ticket = new Ticket();
		
		Thread t1 = new Thread(ticket,"窗口1");
		Thread t2 = new Thread(ticket,"窗口2");
		Thread t3 = new Thread(ticket,"窗口3");
		
		t1.start();
		t2.start();
		t3.start();
	}
}

package cn.homework3;
/*
 * 编写Java程序，要求：开启3个主线程之外的线程，3个线程同时卖票，票卖完后在控制
 * 台显示分别打印每个线程所卖的票号
 */

import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;

public class Ticket implements Runnable {
	int ticket = 100;
		
	//创建Lock锁对象
	Lock ck = new ReentrantLock();
		
	@Override
	public void run() {
		//模拟卖票
		while(true){
			//synchronized (lock){
			ck.lock();
				if (ticket > 0) {
					//模拟选坐的操作
					try {
						Thread.sleep(10);
					} catch (InterruptedException e) {
						e.printStackTrace();
					}
					System.out.println(Thread.currentThread().getName() + "正在卖票:" + ticket--);
				}
			ck.unlock();
		}
	}
}
		



