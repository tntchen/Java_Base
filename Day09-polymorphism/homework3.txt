package cn.homework3;
/*定义一个Squeeze接口,抽象榨汁方法
定义一个fruit父类,三个水果的子类
子类分别继承fruit父类并实现Squeeze接口
并实现接受水果的输出,打印水果和榨汁三个功能*/
//编写测试类
public class Test {
	public static void main(String[] args) {
		//创建一个apple子类
		Apple apple= new Apple("苹果");
		//输出果汁
		apple.juice();
		
		//创建一个banana子类
		Banana banana = new Banana("香蕉");
		banana.juice();
		
		//创建一个JackFruit子类
		JackFruit jackFruit = new JackFruit("榴莲");
		jackFruit.juice();
	}
}

package cn.homework3;

abstract interface Squeeze {
	//对榨汁功能进行抽取
	public abstract void juice();
}
package cn.homework3;
//定义水果父类
abstract class Fruit {
	private String fruitname;
	//构造函数

	public Fruit() {
		super();
	}
	public Fruit(String fruitname) {
		super();
		this.fruitname = fruitname;
	}
	//定义set/get方法
	public String getFruitname() {
		return fruitname;
	}
	public void setFruitname(String fruitname) {
		this.fruitname = fruitname;
	}
}
//定义苹果子类
class Apple extends Fruit implements Squeeze {	
	//构造方法
	public Apple() {
		super();
	}
	public Apple(String fruitname) {
		super(fruitname);
	}
	public void juice() {
		// 重写榨汁抽象方法--苹果
		System.out.println("放入"+getFruitname()+"榨出了苹果汁");
	}
}
//定义香蕉子类
class Banana extends Fruit implements Squeeze {
	//构造方法
	public Banana() {
		super();
	}
	public Banana(String fruitname) {
		super(fruitname);
	}
	public void juice() {
		// 重写榨汁抽象方法--香蕉
		System.out.println("放入"+getFruitname()+"榨出了香蕉牛奶");
	}
}
//定义榴莲子类
class JackFruit extends Fruit implements Squeeze {
	//构造方法
	public JackFruit() {
		super();
	}
	public JackFruit(String fruitname) {
		super(fruitname);
	}
	public void juice() {
		// 重写榨汁抽象方法--苹果
		System.out.println("放入"+getFruitname()+"榨出了榴莲汁");
	}
}